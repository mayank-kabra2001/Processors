/* Generated by nMigen Yosys 0.9+3746 (PyPI ver 0.9.post3746.dev38, git sha1 95c608668) */

(* \nmigen.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "nMigen" *)
module top(reg_addr_out, data_to_mem, inst_type_out, inst_type1_out, inst_type2_out, inst_type3_out, Ra, Rb, result, inst_type, inst_type1, inst_type2, immediate, branching, inst_type3, reg_addr_in);
  reg \initial  = 0;
  (* src = "ALU.py:98" *)
  wire [32:0] \$1 ;
  (* src = "ALU.py:116" *)
  wire [31:0] \$11 ;
  (* src = "ALU.py:116" *)
  wire [31:0] \$13 ;
  (* src = "ALU.py:116" *)
  wire [31:0] \$15 ;
  (* src = "ALU.py:116" *)
  wire [31:0] \$17 ;
  (* src = "ALU.py:116" *)
  wire [31:0] \$19 ;
  (* src = "ALU.py:98" *)
  wire [32:0] \$2 ;
  (* src = "ALU.py:119" *)
  wire [31:0] \$21 ;
  (* src = "ALU.py:122" *)
  wire [31:0] \$23 ;
  (* src = "ALU.py:131" *)
  wire [33:0] \$25 ;
  (* src = "ALU.py:131" *)
  wire [33:0] \$26 ;
  (* src = "ALU.py:134" *)
  wire \$28 ;
  (* src = "ALU.py:140" *)
  wire \$30 ;
  (* src = "ALU.py:146" *)
  wire [32:0] \$32 ;
  (* src = "ALU.py:146" *)
  wire [31:0] \$33 ;
  (* src = "ALU.py:146" *)
  wire [32:0] \$35 ;
  (* src = "ALU.py:146" *)
  wire [31:0] \$37 ;
  (* src = "ALU.py:146" *)
  wire [32:0] \$39 ;
  (* src = "ALU.py:101" *)
  wire [32:0] \$4 ;
  (* src = "ALU.py:146" *)
  wire [32:0] \$41 ;
  (* src = "ALU.py:149" *)
  wire [32:0] \$43 ;
  (* src = "ALU.py:149" *)
  wire [32:0] \$44 ;
  (* src = "ALU.py:152" *)
  wire [32:0] \$46 ;
  (* src = "ALU.py:152" *)
  wire [32:0] \$47 ;
  (* src = "ALU.py:156" *)
  wire [33:0] \$49 ;
  (* src = "ALU.py:101" *)
  wire [32:0] \$5 ;
  (* src = "ALU.py:156" *)
  wire [33:0] \$50 ;
  (* src = "ALU.py:158" *)
  wire [33:0] \$52 ;
  (* src = "ALU.py:158" *)
  wire [33:0] \$53 ;
  (* src = "ALU.py:161" *)
  wire [33:0] \$55 ;
  (* src = "ALU.py:161" *)
  wire [33:0] \$56 ;
  (* src = "ALU.py:169" *)
  wire \$58 ;
  (* src = "ALU.py:174" *)
  wire \$60 ;
  (* src = "ALU.py:176" *)
  wire [33:0] \$62 ;
  (* src = "ALU.py:176" *)
  wire [33:0] \$63 ;
  (* src = "ALU.py:179" *)
  wire \$65 ;
  (* src = "ALU.py:184" *)
  wire \$67 ;
  (* src = "ALU.py:189" *)
  wire \$69 ;
  (* src = "ALU.py:104" *)
  wire \$7 ;
  (* src = "ALU.py:194" *)
  wire \$71 ;
  (* src = "ALU.py:207" *)
  wire [33:0] \$73 ;
  (* src = "ALU.py:207" *)
  wire [33:0] \$74 ;
  (* src = "ALU.py:211" *)
  wire [33:0] \$76 ;
  (* src = "ALU.py:211" *)
  wire [33:0] \$77 ;
  (* src = "ALU.py:215" *)
  wire [33:0] \$79 ;
  (* src = "ALU.py:215" *)
  wire [33:0] \$80 ;
  (* src = "ALU.py:169" *)
  wire \$82 ;
  (* src = "ALU.py:174" *)
  wire \$84 ;
  (* src = "ALU.py:179" *)
  wire \$86 ;
  (* src = "ALU.py:184" *)
  wire \$88 ;
  (* src = "ALU.py:110" *)
  wire \$9 ;
  (* src = "ALU.py:189" *)
  wire \$90 ;
  (* src = "ALU.py:194" *)
  wire \$92 ;
  (* src = "ALU.py:12" *)
  input [31:0] Ra;
  (* src = "ALU.py:13" *)
  input [31:0] Rb;
  (* src = "ALU.py:20" *)
  output branching;
  reg branching;
  (* src = "ALU.py:22" *)
  output [31:0] data_to_mem;
  reg [31:0] data_to_mem;
  (* src = "ALU.py:19" *)
  input [31:0] immediate;
  (* src = "ALU.py:15" *)
  input [2:0] inst_type;
  (* src = "ALU.py:16" *)
  input [10:0] inst_type1;
  (* src = "ALU.py:24" *)
  output [10:0] inst_type1_out;
  (* src = "ALU.py:17" *)
  input [9:0] inst_type2;
  (* src = "ALU.py:25" *)
  output [9:0] inst_type2_out;
  (* src = "ALU.py:21" *)
  input [6:0] inst_type3;
  (* src = "ALU.py:26" *)
  output [6:0] inst_type3_out;
  (* src = "ALU.py:23" *)
  output [2:0] inst_type_out;
  (* src = "ALU.py:76" *)
  reg [1:0] load_mem;
  (* src = "ALU.py:79" *)
  reg load_wb;
  (* src = "ALU.py:18" *)
  input [4:0] reg_addr_in;
  (* src = "ALU.py:27" *)
  output [4:0] reg_addr_out;
  (* src = "ALU.py:14" *)
  output [31:0] result;
  reg [31:0] result;
  (* src = "ALU.py:77" *)
  reg [1:0] write_mem;
  assign \$9  = Ra < (* src = "ALU.py:110" *) Rb;
  assign \$11  = ~ (* src = "ALU.py:116" *) Rb;
  assign \$13  = Ra & (* src = "ALU.py:116" *) \$11 ;
  assign \$15  = ~ (* src = "ALU.py:116" *) Ra;
  assign \$17  = \$15  & (* src = "ALU.py:116" *) Rb;
  assign \$19  = \$13  | (* src = "ALU.py:116" *) \$17 ;
  assign \$21  = Rb | (* src = "ALU.py:119" *) Ra;
  assign \$23  = Rb & (* src = "ALU.py:122" *) Ra;
  assign \$26  = $signed(Ra) + (* src = "ALU.py:131" *) $signed(immediate);
  assign \$28  = $signed(Ra) < (* src = "ALU.py:134" *) $signed(immediate);
  assign \$2  = Ra + (* src = "ALU.py:98" *) Rb;
  assign \$30  = $signed(Ra) < (* src = "ALU.py:140" *) $signed(immediate);
  assign \$33  = ~ (* src = "ALU.py:146" *) $signed(immediate);
  assign \$35  = $signed(Ra) & (* src = "ALU.py:146" *) $signed(\$33 );
  assign \$37  = ~ (* src = "ALU.py:146" *) Ra;
  assign \$39  = $signed(\$37 ) & (* src = "ALU.py:146" *) $signed(immediate);
  assign \$41  = $signed(\$35 ) | (* src = "ALU.py:146" *) $signed(\$39 );
  assign \$44  = $signed(Ra) | (* src = "ALU.py:149" *) $signed(immediate);
  assign \$47  = $signed(Ra) & (* src = "ALU.py:152" *) $signed(immediate);
  assign \$50  = $signed(Ra) + (* src = "ALU.py:156" *) $signed(immediate);
  assign \$53  = $signed(Ra) + (* src = "ALU.py:158" *) $signed(immediate);
  assign \$56  = $signed(Ra) + (* src = "ALU.py:161" *) $signed(immediate);
  assign \$58  = Ra == (* src = "ALU.py:169" *) Rb;
  assign \$5  = Rb - (* src = "ALU.py:101" *) Ra;
  assign \$60  = Ra != (* src = "ALU.py:174" *) Rb;
  assign \$63  = $signed(Ra) + (* src = "ALU.py:176" *) $signed(immediate);
  assign \$65  = Ra < (* src = "ALU.py:179" *) Rb;
  assign \$67  = Ra >= (* src = "ALU.py:184" *) Rb;
  assign \$69  = Ra < (* src = "ALU.py:189" *) Rb;
  assign \$71  = Ra >= (* src = "ALU.py:194" *) Rb;
  assign \$74  = $signed(Ra) + (* src = "ALU.py:207" *) $signed(immediate);
  assign \$77  = $signed(Ra) + (* src = "ALU.py:211" *) $signed(immediate);
  assign \$7  = Ra < (* src = "ALU.py:104" *) Rb;
  assign \$80  = $signed(Ra) + (* src = "ALU.py:215" *) $signed(immediate);
  assign \$82  = Ra == (* src = "ALU.py:169" *) Rb;
  assign \$84  = Ra != (* src = "ALU.py:174" *) Rb;
  assign \$86  = Ra < (* src = "ALU.py:179" *) Rb;
  assign \$88  = Ra >= (* src = "ALU.py:184" *) Rb;
  assign \$90  = Ra < (* src = "ALU.py:189" *) Rb;
  assign \$92  = Ra >= (* src = "ALU.py:194" *) Rb;
  always @* begin
    if (\initial ) begin end
    data_to_mem = 32'd0;
    (* src = "ALU.py:89" *)
    casez (inst_type)
      /* src = "ALU.py:201" */
      3'h3:
          (* src = "ALU.py:204" *)
          casez (inst_type2)
            /* src = "ALU.py:205" */
            10'h023:
                data_to_mem = Rb;
            /* src = "ALU.py:209" */
            10'h0a3:
                data_to_mem = Rb;
            /* src = "ALU.py:213" */
            10'h123:
                data_to_mem = Rb;
          endcase
    endcase
  end
  always @* begin
    if (\initial ) begin end
    load_wb = 1'h0;
    (* src = "ALU.py:89" *)
    casez (inst_type)
      /* src = "ALU.py:91" */
      3'h7:
          load_wb = 1'h1;
      /* src = "ALU.py:126" */
      3'h1:
          load_wb = 1'h1;
      /* src = "ALU.py:165" */
      3'h4:
          load_wb = 1'h0;
      /* src = "ALU.py:201" */
      3'h3:
          load_wb = 1'h0;
      /* src = "ALU.py:218" */
      3'h5:
          load_wb = 1'h1;
      /* src = "ALU.py:229" */
      3'h6:
          load_wb = 1'h1;
    endcase
  end
  always @* begin
    if (\initial ) begin end
    load_mem = 2'h0;
    (* src = "ALU.py:89" *)
    casez (inst_type)
      /* src = "ALU.py:91" */
      3'h7:
          load_mem = 2'h0;
      /* src = "ALU.py:126" */
      3'h1:
          (* src = "ALU.py:129" *)
          casez (inst_type2)
            /* src = "ALU.py:130" */
            10'h013:
                /* empty */;
            /* src = "ALU.py:133" */
            10'h113:
                /* empty */;
            /* src = "ALU.py:139" */
            10'h193:
                /* empty */;
            /* src = "ALU.py:145" */
            10'h213:
                /* empty */;
            /* src = "ALU.py:148" */
            10'h313:
                /* empty */;
            /* src = "ALU.py:151" */
            10'h393:
                /* empty */;
            /* src = "ALU.py:154" */
            10'h103:
                load_mem = 2'h3;
            /* src = "ALU.py:157" */
            10'h283, 10'h083:
                load_mem = 2'h2;
            /* src = "ALU.py:160" */
            10'h203, 10'h003:
                load_mem = 2'h1;
          endcase
      /* src = "ALU.py:201" */
      3'h3:
          load_mem = 2'h0;
      /* src = "ALU.py:218" */
      3'h5:
          load_mem = 2'h0;
      /* src = "ALU.py:229" */
      3'h6:
          load_mem = 2'h0;
    endcase
  end
  always @* begin
    if (\initial ) begin end
    write_mem = 2'h0;
    (* src = "ALU.py:89" *)
    casez (inst_type)
      /* src = "ALU.py:91" */
      3'h7:
          write_mem = 2'h0;
      /* src = "ALU.py:126" */
      3'h1:
          write_mem = 2'h0;
      /* src = "ALU.py:201" */
      3'h3:
          (* src = "ALU.py:204" *)
          casez (inst_type2)
            /* src = "ALU.py:205" */
            10'h023:
                write_mem = 2'h1;
            /* src = "ALU.py:209" */
            10'h0a3:
                write_mem = 2'h2;
            /* src = "ALU.py:213" */
            10'h123:
                write_mem = 2'h3;
          endcase
      /* src = "ALU.py:218" */
      3'h5:
          write_mem = 2'h0;
      /* src = "ALU.py:229" */
      3'h6:
          write_mem = 2'h0;
    endcase
  end
  always @* begin
    if (\initial ) begin end
    result = 32'd0;
    (* src = "ALU.py:89" *)
    casez (inst_type)
      /* src = "ALU.py:91" */
      3'h7:
          (* src = "ALU.py:95" *)
          casez (inst_type1)
            /* src = "ALU.py:97" */
            11'h033:
                result = \$1 [31:0];
            /* src = "ALU.py:100" */
            11'h433:
                result = \$4 [31:0];
            /* src = "ALU.py:103" */
            11'h133:
                (* full_case = 32'd1 *)
                (* src = "ALU.py:104" *)
                casez (\$7 )
                  /* src = "ALU.py:104" */
                  1'h1:
                      result = 32'd1;
                  /* src = "ALU.py:106" */
                  default:
                      result = 32'd0;
                endcase
            /* src = "ALU.py:109" */
            11'h1b3:
                (* full_case = 32'd1 *)
                (* src = "ALU.py:110" *)
                casez (\$9 )
                  /* src = "ALU.py:110" */
                  1'h1:
                      result = 32'd1;
                  /* src = "ALU.py:112" */
                  default:
                      result = 32'd0;
                endcase
            /* src = "ALU.py:115" */
            11'h233:
                result = \$19 ;
            /* src = "ALU.py:118" */
            11'h333:
                result = \$21 ;
            /* src = "ALU.py:121" */
            11'h3b3:
                result = \$23 ;
          endcase
      /* src = "ALU.py:126" */
      3'h1:
          (* src = "ALU.py:129" *)
          casez (inst_type2)
            /* src = "ALU.py:130" */
            10'h013:
                result = \$25 [31:0];
            /* src = "ALU.py:133" */
            10'h113:
                (* full_case = 32'd1 *)
                (* src = "ALU.py:134" *)
                casez (\$28 )
                  /* src = "ALU.py:134" */
                  1'h1:
                      result = 32'd1;
                  /* src = "ALU.py:136" */
                  default:
                      result = 32'd0;
                endcase
            /* src = "ALU.py:139" */
            10'h193:
                (* full_case = 32'd1 *)
                (* src = "ALU.py:140" *)
                casez (\$30 )
                  /* src = "ALU.py:140" */
                  1'h1:
                      result = 32'd1;
                  /* src = "ALU.py:142" */
                  default:
                      result = 32'd0;
                endcase
            /* src = "ALU.py:145" */
            10'h213:
                result = \$32 [31:0];
            /* src = "ALU.py:148" */
            10'h313:
                result = \$43 [31:0];
            /* src = "ALU.py:151" */
            10'h393:
                result = \$46 [31:0];
            /* src = "ALU.py:154" */
            10'h103:
                result = \$49 [31:0];
            /* src = "ALU.py:157" */
            10'h283, 10'h083:
                result = \$52 [31:0];
            /* src = "ALU.py:160" */
            10'h203, 10'h003:
                result = \$55 [31:0];
          endcase
      /* src = "ALU.py:165" */
      3'h4:
          (* src = "ALU.py:167" *)
          casez (inst_type2)
            /* src = "ALU.py:168" */
            10'h063:
                (* src = "ALU.py:169" *)
                casez (\$58 )
                  /* src = "ALU.py:169" */
                  1'h1:
                      result = immediate;
                endcase
            /* src = "ALU.py:173" */
            10'h0e3:
                (* src = "ALU.py:174" *)
                casez (\$60 )
                  /* src = "ALU.py:174" */
                  1'h1:
                      result = \$62 [31:0];
                endcase
            /* src = "ALU.py:178" */
            10'h263:
                (* src = "ALU.py:179" *)
                casez (\$65 )
                  /* src = "ALU.py:179" */
                  1'h1:
                      result = immediate;
                endcase
            /* src = "ALU.py:183" */
            10'h2e3:
                (* src = "ALU.py:184" *)
                casez (\$67 )
                  /* src = "ALU.py:184" */
                  1'h1:
                      result = immediate;
                endcase
            /* src = "ALU.py:188" */
            10'h363:
                (* src = "ALU.py:189" *)
                casez (\$69 )
                  /* src = "ALU.py:189" */
                  1'h1:
                      result = immediate;
                endcase
            /* src = "ALU.py:193" */
            10'h3e3:
                (* src = "ALU.py:194" *)
                casez (\$71 )
                  /* src = "ALU.py:194" */
                  1'h1:
                      result = immediate;
                endcase
          endcase
      /* src = "ALU.py:201" */
      3'h3:
          (* src = "ALU.py:204" *)
          casez (inst_type2)
            /* src = "ALU.py:205" */
            10'h023:
                result = \$73 [31:0];
            /* src = "ALU.py:209" */
            10'h0a3:
                result = \$76 [31:0];
            /* src = "ALU.py:213" */
            10'h123:
                result = \$79 [31:0];
          endcase
      /* src = "ALU.py:218" */
      3'h5:
          (* src = "ALU.py:222" *)
          casez (inst_type3)
            /* src = "ALU.py:223" */
            7'h37:
                result = immediate;
            /* src = "ALU.py:226" */
            7'h17:
                result = immediate;
          endcase
      /* src = "ALU.py:229" */
      3'h6:
          (* src = "ALU.py:233" *)
          casez (inst_type3)
            /* src = "ALU.py:234" */
            7'h6f:
                result = immediate;
          endcase
    endcase
  end
  always @* begin
    if (\initial ) begin end
    branching = 1'h0;
    (* src = "ALU.py:89" *)
    casez (inst_type)
      /* src = "ALU.py:165" */
      3'h4:
          (* full_case = 32'd1 *)
          (* src = "ALU.py:167" *)
          casez (inst_type2)
            /* src = "ALU.py:168" */
            10'h063:
                (* src = "ALU.py:169" *)
                casez (\$82 )
                  /* src = "ALU.py:169" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "ALU.py:173" */
            10'h0e3:
                (* src = "ALU.py:174" *)
                casez (\$84 )
                  /* src = "ALU.py:174" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "ALU.py:178" */
            10'h263:
                (* src = "ALU.py:179" *)
                casez (\$86 )
                  /* src = "ALU.py:179" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "ALU.py:183" */
            10'h2e3:
                (* src = "ALU.py:184" *)
                casez (\$88 )
                  /* src = "ALU.py:184" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "ALU.py:188" */
            10'h363:
                (* src = "ALU.py:189" *)
                casez (\$90 )
                  /* src = "ALU.py:189" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "ALU.py:193" */
            10'h3e3:
                (* src = "ALU.py:194" *)
                casez (\$92 )
                  /* src = "ALU.py:194" */
                  1'h1:
                      branching = 1'h1;
                endcase
            /* src = "ALU.py:198" */
            default:
                branching = 1'h0;
          endcase
    endcase
  end
  assign \$1  = \$2 ;
  assign \$4  = \$5 ;
  assign \$25  = \$26 ;
  assign \$32  = \$41 ;
  assign \$43  = \$44 ;
  assign \$46  = \$47 ;
  assign \$49  = \$50 ;
  assign \$52  = \$53 ;
  assign \$55  = \$56 ;
  assign \$62  = \$63 ;
  assign \$73  = \$74 ;
  assign \$76  = \$77 ;
  assign \$79  = \$80 ;
  assign reg_addr_out = reg_addr_in;
  assign inst_type3_out = inst_type3;
  assign inst_type2_out = inst_type2;
  assign inst_type1_out = inst_type1;
  assign inst_type_out = inst_type;
endmodule

